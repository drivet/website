{"sourceUrl": "https://desmondrivet.com/2021/08/25/git-warts", "targetUrl": "https://desmondrivet.com", "parsedSource": {"items": [{"type": ["h-entry"], "properties": {"author": [{"type": ["h-card"], "properties": {"photo": ["https://desmondrivet.com/me02.jpg"], "name": ["Desmond Rivet"], "url": ["https://desmondrivet.com"]}, "value": "Desmond Rivet"}], "published": ["2021-08-25T21:17:13-04:00"], "name": ["Git is Terrible"], "summary": ["I cannot be the only one who thinks that git is awful"], "content": [{"html": "<p>If I say that my professional life has spanned <a href=\"https://en.wikipedia.org/wiki/Revision_Control_System\">RCS</a>, <a href=\"https://en.wikipedia.org/wiki/Concurrent_Versions_System\">CVS</a>,\n<a href=\"https://en.wikipedia.org/wiki/Mercurial\">Mercurial</a> and <a href=\"https://en.wikipedia.org/wiki/Git\">Git</a>, this tell you something (depressing) about my\nage.</p>\n<p>Like everyone else, I'm now a git user, but I still say that Mercurial was\nthe most elegant of the bunch, at least in terms of its emmiently\npredictable and well-designed CLI, even if the software itself gave up the\nghost years ago.</p>\n<p>Back in the day, when version control systems were still duking it out, I\nused to try and defend mercurial to rabid git fans, mostly to no avail.  I\nalways felt that I was at a bit of disadvantage in those conversationa (cue\nthe git fans yelling \"Yeah, cuz mercurial SUCKS!\"), because I was always\nwilling to concede, despite appreciating mercurial's virtues, that git\nactually did have its strengths as well as its weaknesses, while the git\nfans were rarely so magnanimous with any other VCS.</p>\n<p>It has to be said: git is blazing fast, with a very flexible branching model\nand large mindshare.  The branching model and the existence of things like\n<a href=\"https://github.com/\">github</a> are probably, in fact, the principal strengths of git, and the\nprincipal weaknesses of mercurial.  It's a good thing too, because as far as\nthe CLI is concerned, git is simply garbage.</p>\n<h2>CLI Warts</h2>\n<p>The fact that there exists a site like the <a href=\"https://git-man-page-generator.lokaltog.net/\">git man page genertaor</a>\nshould tell you something about git's CLI.</p>\n<p>You use <code>git branch</code> to list and create branches, but you use <code>git\ncheckout</code> to <em>switch</em> to a branch, unless it's a new branch, in which case\nit can also be used to also create the branch if you supply it with the -b\noption.</p>\n<p>So far this isn't actually that bad.  The <code>checkout</code> command is your\nmoving around command - you can use it to switch to an arbitrary commit, for\nexample.  The branch command is your branch management command.  The -b\noption to the checkout command does add a certain wart to the whole thing -\nit would be more intuitive, in my opinion, if the branch command created\n<em>and</em> switched you to the branch automatically - but so far it's nothing\nhorrible, even if the term \"checkout\" here seems a bit more general than one\nmight be used to.</p>\n<p>Ah! But you <em>also</em> use <code>git checkout</code> when you want to <em>revert</em> a <em>file</em>,\ni.e.  undo the local changes you just made to it.  I understand the\nunderlying conceptual link between the two use cases, but it's not the\nnormal way I usually think about these operations.  There is, in fact, a\n<code>git revert</code> comand but, surprisingly, it doesn't actually work on files -\nit's used to create commits which undo (revert) other commits.  Of course,\nif you want to just revert all the local changes in your repo, you can do so\nwith the <code>git reset</code> command, which comes in hard and soft flavours, like\nice cream, and which also doesn't work on individual files, but which\nprovides a plethora of options, mostly revolving around whether your changes\nare <em>staged</em> or not.</p>\n<p>Oh yeah! Git also provides a staging area, which I've personally found of limited\nvalue, especially when you consider how easy it is to amend commits.  But\nyour mileage may vary on that front.</p>\n<p>And don't even get me started on <code>git rebase</code>, the swiss amry chainsaw of\nhistory editing commands, which appears to be specially designed to mess up\nyour repo.</p>\n<p>Don't misunderstand me.  I use git every day - sometimes even effectively! -\nand I would never use mercurial on a new project.  It's just that I\nsometimes think that there are git fams who use it <em>because</em> of its\ndifficulties, rather than <em>in spite</em> of them - possibly the same kind of\npeople who enjoy competing in <a href=\"https://www.ioccc.org/\">Obfuscated C contests</a>.  They are a\nflavour of nerd to which I don't really relate.</p>\n<a href=\"https://brid.gy/publish/twitter\"></a>", "value": "If I say that my professional life has spanned RCS, CVS, Mercurial and Git, this tell you something (depressing) about my age.\nLike everyone else, I'm now a git user, but I still say that Mercurial was the most elegant of the bunch, at least in terms of its emmiently predictable and well-designed CLI, even if the software itself gave up the ghost years ago.\nBack in the day, when version control systems were still duking it out, I used to try and defend mercurial to rabid git fans, mostly to no avail. I always felt that I was at a bit of disadvantage in those conversationa (cue the git fans yelling \"Yeah, cuz mercurial SUCKS!\"), because I was always willing to concede, despite appreciating mercurial's virtues, that git actually did have its strengths as well as its weaknesses, while the git fans were rarely so magnanimous with any other VCS.\nIt has to be said: git is blazing fast, with a very flexible branching model and large mindshare. The branching model and the existence of things like github are probably, in fact, the principal strengths of git, and the principal weaknesses of mercurial. It's a good thing too, because as far as the CLI is concerned, git is simply garbage.CLI Warts\nThe fact that there exists a site like the git man page genertaor should tell you something about git's CLI.\nYou use git branch to list and create branches, but you use git checkout to switch to a branch, unless it's a new branch, in which case it can also be used to also create the branch if you supply it with the -b option.\nSo far this isn't actually that bad. The checkout command is your moving around command - you can use it to switch to an arbitrary commit, for example. The branch command is your branch management command. The -b option to the checkout command does add a certain wart to the whole thing - it would be more intuitive, in my opinion, if the branch command created and switched you to the branch automatically - but so far it's nothing horrible, even if the term \"checkout\" here seems a bit more general than one might be used to.\nAh! But you also use git checkout when you want to revert a file, i.e. undo the local changes you just made to it. I understand the underlying conceptual link between the two use cases, but it's not the normal way I usually think about these operations. There is, in fact, a git revert comand but, surprisingly, it doesn't actually work on files - it's used to create commits which undo (revert) other commits. Of course, if you want to just revert all the local changes in your repo, you can do so with the git reset command, which comes in hard and soft flavours, like ice cream, and which also doesn't work on individual files, but which provides a plethora of options, mostly revolving around whether your changes are staged or not.\nOh yeah! Git also provides a staging area, which I've personally found of limited value, especially when you consider how easy it is to amend commits. But your mileage may vary on that front.\nAnd don't even get me started on git rebase, the swiss amry chainsaw of history editing commands, which appears to be specially designed to mess up your repo.\nDon't misunderstand me. I use git every day - sometimes even effectively! - and I would never use mercurial on a new project. It's just that I sometimes think that there are git fams who use it because of its difficulties, rather than in spite of them - possibly the same kind of people who enjoy competing in Obfuscated C contests. They are a flavour of nerd to which I don't really relate."}], "syndication": ["https://twitter.com/desmondrivet/status/1430701984336723970"], "url": ["https://desmondrivet.com/2021/08/25/git-warts"]}}], "rels": {"icon": ["https://desmondrivet.com/me02.jpg"], "stylesheet": ["https://desmondrivet.com/theme/css/bootstrap.min.css", "https://desmondrivet.com/theme/fontawesome/css/all.min.css", "https://desmondrivet.com/theme/css/pygments/native.css", "https://desmondrivet.com/theme/css/style.css", "https://desmondrivet.com/static/custom.css", "https://fonts.googleapis.com/css?family=Josefin+Slab|Lato|Old+Standard+TT|Open+Sans|PT+Sans|PT+Serif|Roboto|Source+Sans+Pro|Oxygen"], "alternate": ["https://desmondrivet.com/feeds/all.rss"], "authorization_endpoint": ["https://indieauth.com/auth"], "token_endpoint": ["https://tokens.indieauth.com/token"], "micropub": ["https://micropub.desmondrivet.com"], "microsub": ["https://aperture.p3k.io/microsub/463"], "webmention": ["https://webmention.desmondrivet.com"], "feed": ["https://desmondrivet.com/all"], "me": ["http://www.facebook.com/desmond.rivet", "https://www.instagram.com/thegreatdesmondo/", "http://www.twitter.com/desmondrivet", "https://github.com/drivet", "http://ca.linkedin.com/in/desmondrivet"]}, "rel-urls": {"https://desmondrivet.com/me02.jpg": {"text": "", "rels": ["icon"]}, "https://desmondrivet.com/theme/css/bootstrap.min.css": {"text": "", "rels": ["stylesheet"], "type": "text/css"}, "https://desmondrivet.com/theme/fontawesome/css/all.min.css": {"text": "", "rels": ["stylesheet"]}, "https://desmondrivet.com/theme/css/pygments/native.css": {"text": "", "rels": ["stylesheet"]}, "https://desmondrivet.com/theme/css/style.css": {"text": "", "rels": ["stylesheet"], "type": "text/css"}, "https://desmondrivet.com/static/custom.css": {"text": "", "rels": ["stylesheet"]}, "https://fonts.googleapis.com/css?family=Josefin+Slab|Lato|Old+Standard+TT|Open+Sans|PT+Sans|PT+Serif|Roboto|Source+Sans+Pro|Oxygen": {"text": "", "rels": ["stylesheet"]}, "https://desmondrivet.com/feeds/all.rss": {"text": "", "rels": ["alternate"], "type": "application/rss+xml", "title": "Desmond Rivet RSS Feed"}, "https://indieauth.com/auth": {"text": "", "rels": ["authorization_endpoint"]}, "https://tokens.indieauth.com/token": {"text": "", "rels": ["token_endpoint"]}, "https://micropub.desmondrivet.com": {"text": "", "rels": ["micropub"]}, "https://aperture.p3k.io/microsub/463": {"text": "", "rels": ["microsub"]}, "https://webmention.desmondrivet.com": {"text": "", "rels": ["webmention"]}, "https://desmondrivet.com/all": {"text": "", "rels": ["feed"], "type": "text/html"}, "http://www.facebook.com/desmond.rivet": {"text": "", "rels": ["me"], "title": "Facebook"}, "https://www.instagram.com/thegreatdesmondo/": {"text": "", "rels": ["me"], "title": "Instagram"}, "http://www.twitter.com/desmondrivet": {"text": "", "rels": ["me"], "title": "Twitter"}, "https://github.com/drivet": {"text": "", "rels": ["me"], "title": "Github"}, "http://ca.linkedin.com/in/desmondrivet": {"text": "", "rels": ["me"], "title": "LinkedIn"}}, "debug": {"description": "mf2py - microformats2 parser for python", "source": "https://github.com/microformats/mf2py", "version": "1.1.2", "markup parser": "html5lib"}, "alternates": [{"url": "https://desmondrivet.com/feeds/all.rss", "text": "", "type": "application/rss+xml", "title": "Desmond Rivet RSS Feed"}]}}